// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`select boolean > false 1`] = `
{
  "input": "plan:false",
  "result": {
    "ast": {
      "columns": [
        {
          "lhs": {
            "type": "qualifier_key",
            "value": "plan",
          },
          "op": "",
          "rhs": {
            "parsed": false,
            "type": "boolean",
            "value": "false",
          },
          "type": "qualifier",
        },
      ],
      "type": "select_expr",
    },
    "errors": [],
  },
}
`;

exports[`select boolean > true 1`] = `
{
  "input": "plan:true",
  "result": {
    "ast": {
      "columns": [
        {
          "lhs": {
            "type": "qualifier_key",
            "value": "plan",
          },
          "op": "",
          "rhs": {
            "parsed": true,
            "type": "boolean",
            "value": "true",
          },
          "type": "qualifier",
        },
      ],
      "type": "select_expr",
    },
    "errors": [],
  },
}
`;

exports[`select freeform > mixed throughout 1`] = `
{
  "input": "freeform1 age:5 freeform2 search",
  "result": {
    "ast": {
      "columns": [
        {
          "type": "text",
          "value": "freeform1",
        },
        {
          "lhs": {
            "type": "qualifier_key",
            "value": "age",
          },
          "op": "",
          "rhs": {
            "parsed": 5,
            "type": "number",
            "value": "5",
          },
          "type": "qualifier",
        },
        {
          "type": "text",
          "value": "freeform2",
        },
        {
          "type": "text",
          "value": "search",
        },
      ],
      "type": "select_expr",
    },
    "errors": [],
  },
}
`;

exports[`select freeform > quoted 1`] = `
{
  "input": ""a quoted:freeform" age:5",
  "result": {
    "ast": {
      "columns": [
        {
          "quoted": true,
          "type": "text",
          "value": "a quoted:freeform",
        },
        {
          "lhs": {
            "type": "qualifier_key",
            "value": "age",
          },
          "op": "",
          "rhs": {
            "parsed": 5,
            "type": "number",
            "value": "5",
          },
          "type": "qualifier",
        },
      ],
      "type": "select_expr",
    },
    "errors": [],
  },
}
`;

exports[`select freeform > treats as a string 1`] = `
{
  "input": "freeform",
  "result": {
    "ast": {
      "columns": [
        {
          "type": "text",
          "value": "freeform",
        },
      ],
      "type": "select_expr",
    },
    "errors": [],
  },
}
`;

exports[`select functions > boolean arguments 1`] = `
{
  "input": "my_func(true, false)",
  "result": {
    "ast": {
      "columns": [
        {
          "args": [
            {
              "position": 0,
              "type": "function_arg",
              "vals": [
                {
                  "parsed": true,
                  "type": "boolean",
                  "value": "true",
                },
              ],
            },
            {
              "position": 1,
              "type": "function_arg",
              "vals": [
                {
                  "parsed": false,
                  "type": "boolean",
                  "value": "false",
                },
              ],
            },
          ],
          "name": "my_func",
          "op": undefined,
          "rhs": undefined,
          "type": "function",
        },
      ],
      "type": "select_expr",
    },
    "errors": [],
  },
}
`;

exports[`select functions > boolean rhs 1`] = `
{
  "input": "my_func():true",
  "result": {
    "ast": {
      "columns": [
        {
          "args": [],
          "name": "my_func",
          "op": "",
          "rhs": {
            "parsed": true,
            "type": "boolean",
            "value": "true",
          },
          "type": "function",
        },
      ],
      "type": "select_expr",
    },
    "errors": [],
  },
}
`;

exports[`select functions > no args 1`] = `
{
  "input": "full_name()",
  "result": {
    "ast": {
      "columns": [
        {
          "args": [],
          "name": "full_name",
          "op": undefined,
          "rhs": undefined,
          "type": "function",
        },
      ],
      "type": "select_expr",
    },
    "errors": [],
  },
}
`;

exports[`select functions > no args with space 1`] = `
{
  "input": "full_name(  )",
  "result": {
    "ast": {
      "columns": [
        {
          "args": [],
          "name": "full_name",
          "op": undefined,
          "rhs": undefined,
          "type": "function",
        },
      ],
      "type": "select_expr",
    },
    "errors": [],
  },
}
`;

exports[`select functions > number arguments 1`] = `
{
  "input": "my_func(2, 0.5, -2)",
  "result": {
    "ast": {
      "columns": [
        {
          "args": [
            {
              "position": 0,
              "type": "function_arg",
              "vals": [
                {
                  "parsed": 2,
                  "type": "number",
                  "value": "2",
                },
              ],
            },
            {
              "position": 1,
              "type": "function_arg",
              "vals": [
                {
                  "parsed": 0.5,
                  "type": "number",
                  "value": "0.5",
                },
              ],
            },
            {
              "position": 2,
              "type": "function_arg",
              "vals": [
                {
                  "parsed": -2,
                  "type": "number",
                  "value": "-2",
                },
              ],
            },
          ],
          "name": "my_func",
          "op": undefined,
          "rhs": undefined,
          "type": "function",
        },
      ],
      "type": "select_expr",
    },
    "errors": [],
  },
}
`;

exports[`select functions > relative date rhs 1`] = `
{
  "input": "last_seen():-7d",
  "result": {
    "ast": {
      "columns": [
        {
          "args": [],
          "name": "last_seen",
          "op": "",
          "rhs": {
            "parsed": 7,
            "sign": "-",
            "type": "relative_date",
            "unit": "d",
            "value": "7",
          },
          "type": "function",
        },
      ],
      "type": "select_expr",
    },
    "errors": [],
  },
}
`;

exports[`select functions > single string arg 1`] = `
{
  "input": "count(events)",
  "result": {
    "ast": {
      "columns": [
        {
          "args": [
            {
              "position": 0,
              "type": "function_arg",
              "vals": [
                {
                  "type": "text",
                  "value": "events",
                },
              ],
            },
          ],
          "name": "count",
          "op": undefined,
          "rhs": undefined,
          "type": "function",
        },
      ],
      "type": "select_expr",
    },
    "errors": [],
  },
}
`;

exports[`select functions > with filter argument 1`] = `
{
  "input": "count(projects, plan:free !has:email):>5",
  "result": {
    "ast": {
      "columns": [
        {
          "args": [
            {
              "position": 0,
              "type": "function_arg",
              "vals": [
                {
                  "type": "text",
                  "value": "projects",
                },
              ],
            },
            {
              "position": 1,
              "type": "function_arg",
              "vals": [
                {
                  "lhs": {
                    "type": "qualifier_key",
                    "value": "plan",
                  },
                  "op": "",
                  "rhs": {
                    "type": "text",
                    "value": "free",
                  },
                  "type": "qualifier",
                },
                {
                  "lhs": {
                    "type": "qualifier_key",
                    "value": "has",
                  },
                  "negated": true,
                  "op": "",
                  "rhs": {
                    "type": "text",
                    "value": "email",
                  },
                  "type": "qualifier",
                },
              ],
            },
          ],
          "name": "count",
          "op": ">",
          "rhs": {
            "parsed": 5,
            "type": "number",
            "value": "5",
          },
          "type": "function",
        },
      ],
      "type": "select_expr",
    },
    "errors": [],
  },
}
`;

exports[`select functions > with quoted argument 1`] = `
{
  "input": "count(projects, "free search"):>0.5",
  "result": {
    "ast": {
      "columns": [
        {
          "args": [
            {
              "position": 0,
              "type": "function_arg",
              "vals": [
                {
                  "type": "text",
                  "value": "projects",
                },
              ],
            },
            {
              "position": 1,
              "type": "function_arg",
              "vals": [
                {
                  "quoted": true,
                  "type": "text",
                  "value": "free search",
                },
              ],
            },
          ],
          "name": "count",
          "op": ">",
          "rhs": {
            "parsed": 0.5,
            "type": "number",
            "value": "0.5",
          },
          "type": "function",
        },
      ],
      "type": "select_expr",
    },
    "errors": [],
  },
}
`;

exports[`select functions > with rhs 1`] = `
{
  "input": "divide(projects, max_projects):>0.5",
  "result": {
    "ast": {
      "columns": [
        {
          "args": [
            {
              "position": 0,
              "type": "function_arg",
              "vals": [
                {
                  "type": "text",
                  "value": "projects",
                },
              ],
            },
            {
              "position": 1,
              "type": "function_arg",
              "vals": [
                {
                  "type": "text",
                  "value": "max_projects",
                },
              ],
            },
          ],
          "name": "divide",
          "op": ">",
          "rhs": {
            "parsed": 0.5,
            "type": "number",
            "value": "0.5",
          },
          "type": "function",
        },
      ],
      "type": "select_expr",
    },
    "errors": [],
  },
}
`;

exports[`select in filters > negation 1`] = `
{
  "input": "!user:[jane, john]",
  "result": {
    "ast": {
      "columns": [
        {
          "lhs": {
            "type": "qualifier_key",
            "value": "user",
          },
          "negated": true,
          "op": "",
          "rhs": {
            "type": "bracket_list",
            "values": [
              {
                "type": "text",
                "value": "jane",
              },
              {
                "type": "text",
                "value": "john",
              },
            ],
          },
          "type": "qualifier",
        },
      ],
      "type": "select_expr",
    },
    "errors": [],
  },
}
`;

exports[`select in filters > numbers 1`] = `
{
  "input": "release:[12.0]",
  "result": {
    "ast": {
      "columns": [
        {
          "lhs": {
            "type": "qualifier_key",
            "value": "release",
          },
          "op": "",
          "rhs": {
            "type": "bracket_list",
            "values": [
              {
                "parsed": 12,
                "type": "number",
                "value": "12.0",
              },
            ],
          },
          "type": "qualifier",
        },
      ],
      "type": "select_expr",
    },
    "errors": [],
  },
}
`;

exports[`select in filters > quoted 1`] = `
{
  "input": "release:[jane, "john doe"]",
  "result": {
    "ast": {
      "columns": [
        {
          "lhs": {
            "type": "qualifier_key",
            "value": "release",
          },
          "op": "",
          "rhs": {
            "type": "bracket_list",
            "values": [
              {
                "type": "text",
                "value": "jane",
              },
              {
                "quoted": true,
                "type": "text",
                "value": "john doe",
              },
            ],
          },
          "type": "qualifier",
        },
      ],
      "type": "select_expr",
    },
    "errors": [],
  },
}
`;

exports[`select in filters > works 1`] = `
{
  "input": "user:[jane, john]",
  "result": {
    "ast": {
      "columns": [
        {
          "lhs": {
            "type": "qualifier_key",
            "value": "user",
          },
          "op": "",
          "rhs": {
            "type": "bracket_list",
            "values": [
              {
                "type": "text",
                "value": "jane",
              },
              {
                "type": "text",
                "value": "john",
              },
            ],
          },
          "type": "qualifier",
        },
      ],
      "type": "select_expr",
    },
    "errors": [],
  },
}
`;

exports[`select operators > < 1`] = `
{
  "input": "num_members:<5.0",
  "result": {
    "ast": {
      "columns": [
        {
          "lhs": {
            "type": "qualifier_key",
            "value": "num_members",
          },
          "op": "<",
          "rhs": {
            "parsed": 5,
            "type": "number",
            "value": "5.0",
          },
          "type": "qualifier",
        },
      ],
      "type": "select_expr",
    },
    "errors": [],
  },
}
`;

exports[`select operators > <= 1`] = `
{
  "input": "num_members:<=5.0",
  "result": {
    "ast": {
      "columns": [
        {
          "lhs": {
            "type": "qualifier_key",
            "value": "num_members",
          },
          "op": "<=",
          "rhs": {
            "parsed": 5,
            "type": "number",
            "value": "5.0",
          },
          "type": "qualifier",
        },
      ],
      "type": "select_expr",
    },
    "errors": [],
  },
}
`;

exports[`select operators > = 1`] = `
{
  "input": "num_members:=5",
  "result": {
    "ast": {
      "columns": [
        {
          "lhs": {
            "type": "qualifier_key",
            "value": "num_members",
          },
          "op": "=",
          "rhs": {
            "parsed": 5,
            "type": "number",
            "value": "5",
          },
          "type": "qualifier",
        },
      ],
      "type": "select_expr",
    },
    "errors": [],
  },
}
`;

exports[`select operators > > 1`] = `
{
  "input": "num_members:>5.0",
  "result": {
    "ast": {
      "columns": [
        {
          "lhs": {
            "type": "qualifier_key",
            "value": "num_members",
          },
          "op": ">",
          "rhs": {
            "parsed": 5,
            "type": "number",
            "value": "5.0",
          },
          "type": "qualifier",
        },
      ],
      "type": "select_expr",
    },
    "errors": [],
  },
}
`;

exports[`select operators > >= 1`] = `
{
  "input": "num_members:>=5",
  "result": {
    "ast": {
      "columns": [
        {
          "lhs": {
            "type": "qualifier_key",
            "value": "num_members",
          },
          "op": ">=",
          "rhs": {
            "parsed": 5,
            "type": "number",
            "value": "5",
          },
          "type": "qualifier",
        },
      ],
      "type": "select_expr",
    },
    "errors": [],
  },
}
`;

exports[`select relative date > + 1`] = `
{
  "input": "renews_at:+30d",
  "result": {
    "ast": {
      "columns": [
        {
          "lhs": {
            "type": "qualifier_key",
            "value": "renews_at",
          },
          "op": "",
          "rhs": {
            "parsed": 30,
            "sign": "+",
            "type": "relative_date",
            "unit": "d",
            "value": "30",
          },
          "type": "qualifier",
        },
      ],
      "type": "select_expr",
    },
    "errors": [],
  },
}
`;

exports[`select relative date > - 1`] = `
{
  "input": "last_seen:-1d",
  "result": {
    "ast": {
      "columns": [
        {
          "lhs": {
            "type": "qualifier_key",
            "value": "last_seen",
          },
          "op": "",
          "rhs": {
            "parsed": 1,
            "sign": "-",
            "type": "relative_date",
            "unit": "d",
            "value": "1",
          },
          "type": "qualifier",
        },
      ],
      "type": "select_expr",
    },
    "errors": [],
  },
}
`;

exports[`select relative date > floats are not allowed 1`] = `
{
  "input": "renews_at:+1.2s",
  "result": {
    "ast": {
      "columns": [
        {
          "lhs": {
            "type": "qualifier_key",
            "value": "renews_at",
          },
          "op": "",
          "rhs": {
            "type": "text",
            "value": "",
          },
          "type": "qualifier",
        },
        {
          "parsed": 1.2,
          "type": "number",
          "value": "1.2",
        },
        {
          "type": "text",
          "value": "s",
        },
      ],
      "type": "select_expr",
    },
    "errors": [
      [NoViableAltException: Expecting: one of these possible Token sequences:
  1. [LQuote]
  2. [Number]
  3. [Boolean]
  4. [Identifier]
but found: '+'],
    ],
  },
}
`;

exports[`select relative date > with other filters 1`] = `
{
  "input": "plan:free renews_at:+4w "free form"",
  "result": {
    "ast": {
      "columns": [
        {
          "lhs": {
            "type": "qualifier_key",
            "value": "plan",
          },
          "op": "",
          "rhs": {
            "type": "text",
            "value": "free",
          },
          "type": "qualifier",
        },
        {
          "lhs": {
            "type": "qualifier_key",
            "value": "renews_at",
          },
          "op": "",
          "rhs": {
            "parsed": 4,
            "sign": "+",
            "type": "relative_date",
            "unit": "w",
            "value": "4",
          },
          "type": "qualifier",
        },
        {
          "quoted": true,
          "type": "text",
          "value": "free form",
        },
      ],
      "type": "select_expr",
    },
    "errors": [],
  },
}
`;

exports[`select text filters > .-_[0-9] in keys 1`] = `
{
  "input": "payments.plan-type_is2:free",
  "result": {
    "ast": {
      "columns": [
        {
          "lhs": {
            "type": "qualifier_key",
            "value": "payments.plan-type_is2",
          },
          "op": "",
          "rhs": {
            "type": "text",
            "value": "free",
          },
          "type": "qualifier",
        },
      ],
      "type": "select_expr",
    },
    "errors": [],
  },
}
`;

exports[`select text filters > @.-_ in values 1`] = `
{
  "input": "email:jane@example.com type:public-company_x",
  "result": {
    "ast": {
      "columns": [
        {
          "lhs": {
            "type": "qualifier_key",
            "value": "email",
          },
          "op": "",
          "rhs": {
            "type": "text",
            "value": "jane@example.com",
          },
          "type": "qualifier",
        },
        {
          "lhs": {
            "type": "qualifier_key",
            "value": "type",
          },
          "op": "",
          "rhs": {
            "type": "text",
            "value": "public-company_x",
          },
          "type": "qualifier",
        },
      ],
      "type": "select_expr",
    },
    "errors": [],
  },
}
`;

exports[`select text filters > multiple 1`] = `
{
  "input": "plan:free age:5",
  "result": {
    "ast": {
      "columns": [
        {
          "lhs": {
            "type": "qualifier_key",
            "value": "plan",
          },
          "op": "",
          "rhs": {
            "type": "text",
            "value": "free",
          },
          "type": "qualifier",
        },
        {
          "lhs": {
            "type": "qualifier_key",
            "value": "age",
          },
          "op": "",
          "rhs": {
            "parsed": 5,
            "type": "number",
            "value": "5",
          },
          "type": "qualifier",
        },
      ],
      "type": "select_expr",
    },
    "errors": [],
  },
}
`;

exports[`select text filters > negation 1`] = `
{
  "input": "!plan:free",
  "result": {
    "ast": {
      "columns": [
        {
          "lhs": {
            "type": "qualifier_key",
            "value": "plan",
          },
          "negated": true,
          "op": "",
          "rhs": {
            "type": "text",
            "value": "free",
          },
          "type": "qualifier",
        },
      ],
      "type": "select_expr",
    },
    "errors": [],
  },
}
`;

exports[`select text filters > negation in quoted 1`] = `
{
  "input": "!user:"john doe"",
  "result": {
    "ast": {
      "columns": [
        {
          "lhs": {
            "type": "qualifier_key",
            "value": "user",
          },
          "negated": true,
          "op": "",
          "rhs": {
            "quoted": true,
            "type": "text",
            "value": "john doe",
          },
          "type": "qualifier",
        },
      ],
      "type": "select_expr",
    },
    "errors": [],
  },
}
`;

exports[`select text filters > partial filter still parses 1`] = `
{
  "input": "age:> plan:free user:",
  "result": {
    "ast": {
      "columns": [
        {
          "lhs": {
            "type": "qualifier_key",
            "value": "age",
          },
          "op": ">",
          "rhs": undefined,
          "type": "qualifier",
        },
        {
          "lhs": {
            "type": "qualifier_key",
            "value": "plan",
          },
          "op": "",
          "rhs": {
            "type": "text",
            "value": "free",
          },
          "type": "qualifier",
        },
        {
          "lhs": {
            "type": "qualifier_key",
            "value": "user",
          },
          "op": undefined,
          "rhs": undefined,
          "type": "qualifier",
        },
      ],
      "type": "select_expr",
    },
    "errors": [
      [NoViableAltException: Expecting: one of these possible Token sequences:
  1. [LBracket]
  2. [RelativeDate]
  3. [+]
  4. [Minus]
  5. [LQuote]
  6. [Number]
  7. [Boolean]
  8. [Identifier]
but found: 'plan:'],
    ],
  },
}
`;

exports[`select text filters > quoted value 1`] = `
{
  "input": "user:"john doe"",
  "result": {
    "ast": {
      "columns": [
        {
          "lhs": {
            "type": "qualifier_key",
            "value": "user",
          },
          "op": "",
          "rhs": {
            "quoted": true,
            "type": "text",
            "value": "john doe",
          },
          "type": "qualifier",
        },
      ],
      "type": "select_expr",
    },
    "errors": [],
  },
}
`;

exports[`select text filters > works 1`] = `
{
  "input": "plan:free",
  "result": {
    "ast": {
      "columns": [
        {
          "lhs": {
            "type": "qualifier_key",
            "value": "plan",
          },
          "op": "",
          "rhs": {
            "type": "text",
            "value": "free",
          },
          "type": "qualifier",
        },
      ],
      "type": "select_expr",
    },
    "errors": [],
  },
}
`;
